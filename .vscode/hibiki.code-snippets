{
  "Command": {
    "scope": "typescript",
    "prefix": ["hibiki-command"],
    "body": [
      "import type { Message, TextChannel } from \"eris\";",
      "import { Command } from \"../../classes/Command\";",
      "",
      "export class $1Command extends Command {",
      "  description = \"$2\";",
      "  clientperms = [\"\"];",
      "  requiredperms = [\"\"];",
      "  requiredkeys = [\"\"];",
      "  args = \"$3\";",
      "  aliases = [\"$4\"];",
      "  cooldown = 0;",
      "  allowdms = false;",
      "  allowdisable = true;",
      "  nsfw = false;",
      "  staff = false;",
      "  owner = false;",
      "  voice = false;",
      "",
      "  async run(msg: Message<TextChannel>, pargs: ParsedArgs[], args: string[]) {",
      "    $5",
      "  }",
      "}",
      "",
      ""
    ],
    "description": "Creates a new Hibiki command."
  },

  "Event": {
    "scope": "typescript",
    "prefix": ["hibiki-event"],
    "body": [
      "import { Event } from \"../classes/Event\";",
      "",
      "export class $1Event extends Event {",
      "  events = [\"$2\"];",
      "",
      "  async run(event: string, $3) {",
      "    $4",
      "  }",
      "}",
      "",
      ""
    ],
    "description": "Creates a new Hibiki event."
  },

  "Logger": {
    "scope": "typescript",
    "prefix": ["hibiki-logger"],
    "body": [
      "import { Logger } from \"../classes/Logger\";",
      "const TYPE = \"$1\";",
      "",
      "export class $2Logger extends Logger {",
      "  events = [\"$3\"];",
      "",
      "  async run(event: string, $4) {",
      "    $5",
      "  }",
      "}",
      "",
      ""
    ],
    "description": "Creates a new Hibiki logger."
  }
}
